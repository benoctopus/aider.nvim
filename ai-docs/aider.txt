usage: aider [-h] [--openai-api-key OPENAI_API_KEY] [--model MODEL]
             [--skip-model-availability-check SKIP_MODEL_AVAILABILITY_CHECK]
             [-3] [--voice-language VOICE_LANGUAGE]
             [--openai-api-base OPENAI_API_BASE]
             [--openai-api-type OPENAI_API_TYPE]
             [--openai-api-version OPENAI_API_VERSION]
             [--openai-api-deployment-id OPENAI_API_DEPLOYMENT_ID]
             [--openai-api-engine OPENAI_API_ENGINE]
             [--edit-format EDIT_FORMAT] [--map-tokens MAP_TOKENS]
             [--input-history-file INPUT_HISTORY_FILE]
             [--chat-history-file CHAT_HISTORY_FILE] [--dark-mode]
             [--light-mode] [--pretty | --no-pretty] [--stream | --no-stream]
             [--user-input-color USER_INPUT_COLOR]
             [--tool-output-color TOOL_OUTPUT_COLOR]
             [--tool-error-color TOOL_ERROR_COLOR]
             [--assistant-output-color ASSISTANT_OUTPUT_COLOR]
             [--code-theme CODE_THEME] [--show-diffs] [--git | --no-git]
             [--gitignore | --no-gitignore]
             [--auto-commits | --no-auto-commits]
             [--dirty-commits | --no-dirty-commits] [--dry-run | --no-dry-run]
             [--version] [--apply FILE] [--yes] [-v] [--show-repo-map]
             [--message COMMAND] [-c CONFIG_FILE]
             [FILE ...]

aider is GPT powered coding in your terminal

options:
  -h, --help            show this help message and exit

Main:
  FILE                  the directory of a git repo, or a list of files to
                        edit with GPT (optional)
  --openai-api-key OPENAI_API_KEY
                        Specify the OpenAI API key [env var: OPENAI_API_KEY]
  --model MODEL         Specify the model to use for the main chat (default:
                        gpt-4) [env var: AIDER_MODEL]
  --skip-model-availability-check SKIP_MODEL_AVAILABILITY_CHECK
                        Override to skip model availability check (default:
                        False) [env var: AIDER_SKIP_MODEL_AVAILABILITY_CHECK]
  -3                    Use gpt-3.5-turbo-16k model for the main chat (gpt-4
                        is better)
  --voice-language VOICE_LANGUAGE
                        Specify the language for voice using ISO 639-1 code
                        (default: auto) [env var: AIDER_VOICE_LANGUAGE]

Advanced Model Settings:
  --openai-api-base OPENAI_API_BASE
                        Specify the openai.api_base (default:
                        https://api.openai.com/v1) [env var:
                        AIDER_OPENAI_API_BASE]
  --openai-api-type OPENAI_API_TYPE
                        Specify the openai.api_type [env var:
                        AIDER_OPENAI_API_TYPE]
  --openai-api-version OPENAI_API_VERSION
                        Specify the openai.api_version [env var:
                        AIDER_OPENAI_API_VERSION]
  --openai-api-deployment-id OPENAI_API_DEPLOYMENT_ID
                        Specify the deployment_id arg to be passed to
                        openai.ChatCompletion.create() [env var:
                        AIDER_OPENAI_API_DEPLOYMENT_ID]
  --openai-api-engine OPENAI_API_ENGINE
                        Specify the engine arg to be passed to
                        openai.ChatCompletion.create() [env var:
                        AIDER_OPENAI_API_ENGINE]
  --edit-format EDIT_FORMAT
                        Specify what edit format GPT should use (default
                        depends on model) [env var: AIDER_EDIT_FORMAT]
  --map-tokens MAP_TOKENS
                        Max number of tokens to use for repo map, use 0 to
                        disable (default: 1024) [env var: AIDER_MAP_TOKENS]

History Files:
  --input-history-file INPUT_HISTORY_FILE
                        Specify the chat input history file (default:
                        /home/jv/projects/aider.nvim/.aider.input.history)
                        [env var: AIDER_INPUT_HISTORY_FILE]
  --chat-history-file CHAT_HISTORY_FILE
                        Specify the chat history file (default:
                        /home/jv/projects/aider.nvim/.aider.chat.history.md)
                        [env var: AIDER_CHAT_HISTORY_FILE]

Output Settings:
  --dark-mode           Use colors suitable for a dark terminal background
                        (default: False) [env var: AIDER_DARK_MODE]
  --light-mode          Use colors suitable for a light terminal background
                        (default: False) [env var: AIDER_LIGHT_MODE]
  --pretty, --no-pretty
                        Enable/disable pretty, colorized output (default:
                        True) (default: True) [env var: AIDER_PRETTY]
  --stream, --no-stream
                        Enable/disable streaming responses (default: True)
                        (default: True) [env var: AIDER_STREAM]
  --user-input-color USER_INPUT_COLOR
                        Set the color for user input (default: #00cc00) [env
                        var: AIDER_USER_INPUT_COLOR]
  --tool-output-color TOOL_OUTPUT_COLOR
                        Set the color for tool output (default: None) [env
                        var: AIDER_TOOL_OUTPUT_COLOR]
  --tool-error-color TOOL_ERROR_COLOR
                        Set the color for tool error messages (default: red)
                        [env var: AIDER_TOOL_ERROR_COLOR]
  --assistant-output-color ASSISTANT_OUTPUT_COLOR
                        Set the color for assistant output (default: #0088ff)
                        [env var: AIDER_ASSISTANT_OUTPUT_COLOR]
  --code-theme CODE_THEME
                        Set the markdown code theme (default: default, other
                        options include monokai, solarized-dark, solarized-
                        light) [env var: AIDER_CODE_THEME]
  --show-diffs          Show diffs when committing changes (default: False)
                        [env var: AIDER_SHOW_DIFFS]

Git Settings:
  --git, --no-git       Enable/disable looking for a git repo (default: True)
                        (default: True) [env var: AIDER_GIT]
  --gitignore, --no-gitignore
                        Enable/disable adding .aider* to .gitignore (default:
                        True) (default: True) [env var: AIDER_GITIGNORE]
  --auto-commits, --no-auto-commits
                        Enable/disable auto commit of GPT changes (default:
                        True) (default: True) [env var: AIDER_AUTO_COMMITS]
  --dirty-commits, --no-dirty-commits
                        Enable/disable commits when repo is found dirty
                        (default: True) (default: True) [env var:
                        AIDER_DIRTY_COMMITS]
  --dry-run, --no-dry-run
                        Enable/disable performing a dry run without modifying
                        files (default: False) (default: False) [env var:
                        AIDER_DRY_RUN]

Other Settings:
  --version             Show the version number and exit
  --apply FILE          Apply the changes from the given file instead of
                        running the chat (debug) [env var: AIDER_APPLY]
  --yes                 Always say yes to every confirmation [env var:
                        AIDER_YES]
  -v, --verbose         Enable verbose output [env var: AIDER_VERBOSE]
  --show-repo-map       Print the repo map and exit (debug) [env var:
                        AIDER_SHOW_REPO_MAP]
  --message COMMAND, --msg COMMAND, -m COMMAND
                        Specify a single message to send GPT, process reply
                        then exit (disables chat mode) [env var:
                        AIDER_MESSAGE]
  -c CONFIG_FILE, --config CONFIG_FILE
                        Specify the config file (default: search for
                        .aider.conf.yml in git root, cwd or home directory)

Args that start with '--' can also be set in a config file
